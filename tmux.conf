if-shell 'test -x /usr/local/bin/reattach-to-user-namespace' 'set-option -g default-command "reattach-to-user-namespace -l $SHELL"'
set-option -g status-utf8 on
#setw -g utf8 on

# Our .tmux.conf file

# Setting the prefix from C-b to C-a
set -g prefix C-a

# Free the original Ctrl-b prefix keybinding
unbind C-b

# setting the delay between prefix and command
set -s escape-time 1

# Ensure that we can send Ctrl-A to other apps
bind C-a send-prefix

# Set the base index for windows to 1 instead of 0
set -g base-index 1

# Set the base index for panes to 1 instead of 0
setw -g pane-base-index 1

# Reload the file with Prefix r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# splitting panes
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# moving between panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Quick pane selection
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Pane resizing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Set the default terminal mode to 256color mode
set -g default-terminal "screen-256color"

# enable activity alerts
setw -g monitor-activity on
set -g visual-activity on

# set the status line's colors
# set -g status-fg white
# set -g status-bg black

# set the color of the window list
setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim

# set the color of the active window
setw -g window-status-current-fg white
setw -g window-status-current-bg red
setw -g window-status-current-attr bright

# pane colors
set -g pane-border-fg green
# set -g pane-border-bg black
# set -g pane-active-border-fg white
# set -g pane-active-border-bg yellow

# Command / messgae line
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# Status line left side
set -g status-left-length 40
set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"

# Status line right side
# 15% | 28 Nov 18:15
set -g status-right '#{battery_icon} #{battery_percentage} | %A %h/%d %H:%M '
# Update the status bar every sixty seconds
set -g status-interval 60

# Center the window list
set -g status-justify centre

set -g mouse on

# set mouse on or off
# on
bind m \
    set -g mouse on \;\
    set -g mode-mouse on \;\
    set -g mouse-resize-pane on \;\
    set -g mouse-select-pane on \;\
    set -g mouse-select-window on \;\
    display 'Mouse: ON'
#off
bind M \
    set -g mouse off \;\
    set -g mode-mouse off \;\
    set -g mouse-resize-pane off \;\
    set -g mouse-select-pane off \;\
    set -g mouse-select-window off \;\
    display 'Mouse: OFF'


set -g mode-mouse on
set -g mouse-resize-pane on 
set -g mouse-select-pane on 
set -g mouse-select-window on 

# for scrolling
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# history depth 
set-option -g history-limit 200000

# vi mode
# copy mode: prefix-[
# select: v / V
# copy: y
# paste: prefix-]
set -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel

set-option -g pane-border-status bottom

bind w command-prompt -p 'pane name:'  'run-shell "printf \" \\033]2;%1\\033\\\\ \" "'  # working 
bind t command-prompt -p "(rename-pane)" -I "#T" "select-pane -T '%%'"

# switch border status
bind T run 'zsh -c "arr=( off bottom ) && tmux setw pane-border-status \${arr[\$(( \${arr[(I)#{pane-border-status}]} % 2 + 1  ))]}"'
# set pane title
bind N command-prompt -p 'pane name:' -I "#T" 'send-keys "printf \"\\033]2;%1\\033\\ \" " Enter '  # working 


# List of plugins
# Supports `github_username/repo` or full git repo URLs
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
#
# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell '~/.tmux/plugins/tpm/tpm'
